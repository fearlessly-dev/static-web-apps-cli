"use strict";(self.webpackChunkdocs_www=self.webpackChunkdocs_www||[]).push([[228],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(n),m=o,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(f,s(s({ref:t},p),{},{components:n})):r.createElement(f,s({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var c=2;c<a;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7822:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return u}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),s=["components"],i={sidebar_position:3},l="Get CLI Help",c={unversionedId:"quickstart/help",id:"quickstart/help",title:"Get CLI Help",description:"CLI Commands Help",source:"@site/docs/01-quickstart/03-help.md",sourceDirName:"01-quickstart",slug:"/quickstart/help",permalink:"/static-web-apps-cli/docs/quickstart/help",editUrl:"https://github.com/azure/static-web-apps-cli/tree/main/docs/www/docs/01-quickstart/03-help.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Start the Emulator",permalink:"/static-web-apps-cli/docs/quickstart/start"},next:{title:"Serve from Specific Folder",permalink:"/static-web-apps-cli/docs/emulator/server-from-folder"}},p={},u=[{value:"CLI Commands Help",id:"cli-commands-help",level:2},{value:"Command-Specific Help",id:"command-specific-help",level:2}],d={toc:u};function m(e){var t=e.components,n=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"get-cli-help"},"Get CLI Help"),(0,a.kt)("h2",{id:"cli-commands-help"},"CLI Commands Help"),(0,a.kt)("p",null,"Use ",(0,a.kt)("inlineCode",{parentName:"p"},"swa help")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"swa --help")," for more details"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ swa --help\n")),(0,a.kt)("p",null,"The output should look something like this"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'\nUsage: swa <command> [options]\n\nOptions:\n  -v, --version         output the version number\n  --verbose [prefix]    enable verbose output. \n                        Values are: \n                        silly,info,log,silent (default: "log")\n  --config <path>       Path to swa-cli.config.json file to use.    \n                        (default: "swa-cli.config.json")\n  --print-config        Print all resolved options. \n                        (default: false)\n  -h, --help            display help for command\n\nCommands:\n  start [options] [context]  start the emulator from a directory\n                             or bind to a dev server\n  help [command]             display help for command\n\nDocumentation:\n  https://aka.ms/swa/cli-local-development\n')),(0,a.kt)("h2",{id:"command-specific-help"},"Command-Specific Help"),(0,a.kt)("p",null,"Add ",(0,a.kt)("inlineCode",{parentName:"p"},"--help")," to any command to get more details on its usage. Here's an example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ swa start --help\n")),(0,a.kt)("p",null,"You should see something like this. The examples at the end showcase the more popular uses for this command."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'\nUsage: swa start [context] [options]\n\nstart the emulator from a directory or bind to a dev server\n\nOptions:\n  --app-location <appLocation>               set location for the static app source code (default: "./")\n  --api-location <apiLocation>               set the API folder or Azure Functions emulator address\n  --swa-config-location <swaConfigLocation>  set the directory where the staticwebapp.config.json file is located (default: "./")\n  --api-port <apiPort>                       set the API backend port (default: 7071)\n  --host <host>                              set the cli host address (default: "localhost")\n  --port <port>                              set the cli port (default: 4280)\n  --ssl                                      serve the app and API over HTTPS (default: false)\n  --ssl-cert <sslCertLocation>               SSL certificate (.crt) to use for serving HTTPS\n  --ssl-key <sslKeyLocation>                 SSL key (.key) to use for serving HTTPS\n  --run <startupScript>                      run a command at startup\n  --devserver-timeout <devserverTimeout>     time to wait (in ms) for the dev server to start (default: 30000)\n  --open                                     open the browser to the dev server (default: false)\n  --func-args <funcArgs>                     pass additional arguments to the func start command\n  -h, --help                                 display help for command\n\nExamples:\n\n  Serve static content from a specific folder\n  swa start ./output-folder\n\n  Use an already running framework development server\n  swa start http://localhost:3000\n\n  Use staticwebapp.config.json file in a specific location\n  swa start http://localhost:3000 --swa-config-location ./app-source\n\n  Serve static content and run an API from another folder\n  swa start ./output-folder --api-location ./api\n\n  Use a custom command to run framework development server at startup\n  swa start http://localhost:3000 --run "npm start"\n')))}m.isMDXComponent=!0}}]);