"use strict";(self.webpackChunkdocs_www=self.webpackChunkdocs_www||[]).push([[380],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=a.createContext({}),p=function(e){var t=a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=p(e.components);return a.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(r),m=n,h=c["".concat(i,".").concat(m)]||c[m]||d[m]||l;return r?a.createElement(h,o(o({ref:t},u),{},{components:r})):a.createElement(h,o({ref:t},u))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,o=new Array(l);o[0]=c;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var p=2;p<l;p++)o[p]=r[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}c.displayName="MDXCreateElement"},4714:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return d}});var a=r(7462),n=r(3366),l=(r(7294),r(3905)),o=["components"],s={sidebar_position:2},i="Use Existing Dev Server",p={unversionedId:"releases/0.8.3/emulator/serve-from-devserver",id:"releases/0.8.3/emulator/serve-from-devserver",title:"Use Existing Dev Server",description:"Many front-end frameworks provide their own CLI with associated dev server for previewing apps during development. You might prefer to use that built-in dev server to take advantage of features like livereload and HMR (hot module replacement) specific to that framework's tooling.",source:"@site/docs/releases/0.8.3/02-emulator/02-serve-from-devserver.md",sourceDirName:"releases/0.8.3/02-emulator",slug:"/releases/0.8.3/emulator/serve-from-devserver",permalink:"/static-web-apps-cli/docs/releases/0.8.3/emulator/serve-from-devserver",editUrl:"https://github.com/azure/static-web-apps-cli/tree/main/docs/www/docs/releases/0.8.3/02-emulator/02-serve-from-devserver.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Serve from Specific Folder",permalink:"/static-web-apps-cli/docs/releases/0.8.3/emulator/server-from-folder"},next:{title:"SWA Config File",permalink:"/static-web-apps-cli/docs/releases/0.8.3/config/use-config"}},u={},d=[{value:"Use Dev Server with CLI",id:"use-dev-server-with-cli",level:2},{value:"Default Ports",id:"default-ports",level:2},{value:"Unified Command",id:"unified-command",level:2},{value:"Dev Server Commands",id:"dev-server-commands",level:2}],c={toc:d};function m(e){var t=e.components,r=(0,n.Z)(e,o);return(0,l.kt)("wrapper",(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"use-existing-dev-server"},"Use Existing Dev Server"),(0,l.kt)("p",null,"Many front-end frameworks provide their own CLI with associated dev server for previewing apps during development. You might prefer to use that built-in dev server to take advantage of features like ",(0,l.kt)("em",{parentName:"p"},"livereload")," and ",(0,l.kt)("em",{parentName:"p"},"HMR")," (hot module replacement) specific to that framework's tooling. "),(0,l.kt)("h2",{id:"use-dev-server-with-cli"},"Use Dev Server with CLI"),(0,l.kt)("p",null,"Using an existing dev server with the CLI is a 2-step process:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Start your framework-specific dev server as usual. For example:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Angular: ",(0,l.kt)("inlineCode",{parentName:"li"},"ng serve")," - starts dev server on port 4200"),(0,l.kt)("li",{parentName:"ul"},"Hugo: ",(0,l.kt)("inlineCode",{parentName:"li"},"hugo server")," - starts dev server on port 1313"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"In a different terminal, run ",(0,l.kt)("inlineCode",{parentName:"p"},"swa start")," with the URI provided by the dev server in step 1. This will typically be in the format ",(0,l.kt)("inlineCode",{parentName:"p"},"http://<host>:<port>"),". For example:"))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"In Terminal 1:")," Start the dev server (here, using Hugo)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ hugo server \n...\n...\nWeb Server is available at http://localhost:1313/ (bind address 127.0.0.1)\nPress Ctrl+C to stop\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"In Terminal 2:")," Start the SWA CLI as follows."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ swa start http://localhost:1313/\n\n[swa] \n[swa] Using dev server for static content:\n[swa]     http://localhost:1313/\n[swa] \n[swa] \n[swa] This CLI is currently in preview and runs an emulator that may not match the \n[swa] cloud environment exactly. Always deploy and test your app in Azure.\n[swa] \n[swa] \n[swa] Azure Static Web Apps emulator started at http://localhost:4280. Press CTRL+C to exit.\n")),(0,l.kt)("p",null,"You can now visit ",(0,l.kt)("inlineCode",{parentName:"p"},"http://localhost:4280")," on a browser to access the app with emulated SWA services."),(0,l.kt)("h2",{id:"default-ports"},"Default Ports"),(0,l.kt)("p",null,"Here is a list of the default ports used by some popular dev servers:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Tool"),(0,l.kt)("th",{parentName:"tr",align:null},"Port"),(0,l.kt)("th",{parentName:"tr",align:null},"Command"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://angular.io/cli"},"Angular")),(0,l.kt)("td",{parentName:"tr",align:null},"4200"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"swa start http://localhost:4200"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://dotnet.microsoft.com/apps/aspnet/web-apps/blazor"},"Blazor WebAssembly")),(0,l.kt)("td",{parentName:"tr",align:null},"5000"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"swa start http://localhost:5000"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://www.gatsbyjs.com/docs/gatsby-cli/"},"Gatsby")),(0,l.kt)("td",{parentName:"tr",align:null},"8000"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"swa start http://localhost:8000"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://gohugo.io/commands/hugo_server/"},"Hugo")),(0,l.kt)("td",{parentName:"tr",align:null},"1313"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"swa start http://localhost:1313"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://nextjs.org/"},"Next.js")),(0,l.kt)("td",{parentName:"tr",align:null},"3000"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"swa start http://localhost:3000"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://reactjs.org/docs/create-a-new-react-app.html"},"React (Create React App)")),(0,l.kt)("td",{parentName:"tr",align:null},"3000"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"swa start http://localhost:3000"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://github.com/lukeed/sirv/tree/master/packages/sirv-cli/"},"Svelte (sirv-cli)")),(0,l.kt)("td",{parentName:"tr",align:null},"5000"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"swa start http://localhost:5000"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://cli.vuejs.org/"},"Vue")),(0,l.kt)("td",{parentName:"tr",align:null},"8080"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"swa start http://localhost:8080"))))),(0,l.kt)("h2",{id:"unified-command"},"Unified Command"),(0,l.kt)("p",null,"Instead of a 2-step (two terminal) process, you can simplify the workflow by providing the dev server startup command directly to the CLI along with the "),(0,l.kt)("p",null,"For example, the above 2-step process now becomes the single command shown below (output truncated for clarity)."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'$ swa start http://localhost:1313 --run "hugo server" \n\n[run] Start building sites ... \n[run] hugo v0.94.2+extended darwin/amd64 BuildDate=unknown\n...\n...\n[run] Web Server is available at http://localhost:1313/ (bind address 127.0.0.1)\n[run] Press Ctrl+C to stop\n[swa] \n[swa] Using dev server for static content:\n[swa]     http://localhost:1313\n[swa] \n[swa] \n[swa] This CLI is currently in preview and runs an emulator that may not match the \n[swa] cloud environment exactly. Always deploy and test your app in Azure.\n[swa] \n[swa] \n[swa] Azure Static Web Apps emulator started at http://localhost:4280. Press CTRL+C to exit.\n[swa] \n')),(0,l.kt)("p",null,"As before, you can now visit ",(0,l.kt)("inlineCode",{parentName:"p"},"http://localhost:4280")," on a browser to access the app with emulated SWA services."),(0,l.kt)("h2",{id:"dev-server-commands"},"Dev Server Commands"),(0,l.kt)("p",null,"For convenience, here are the unified commands that work for some popular frameworks (using their default dev server ports):"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'# npm start script (React)\nswa start http://localhost:3000 --run "npm start"\n\n# dotnet watch (Blazor)\nswa start http://localhost:5000 --run "dotnet watch run"\n\n# Jekyll\nswa start http://localhost:4000 --run "jekyll serve"\n')),(0,l.kt)("p",null,"You can also write your own custom startup script for execution and provide that along with the default URI that your custom dev server will run on:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'# custom script\nswa start http://localhost:4200 --run "./startup.sh"\n')),(0,l.kt)("p",null,"As before, you can now visit ",(0,l.kt)("inlineCode",{parentName:"p"},"http://localhost:4280")," on a browser to access the app with emulated SWA services."))}m.isMDXComponent=!0}}]);